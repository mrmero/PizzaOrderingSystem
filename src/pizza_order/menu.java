/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pizza_order;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mero2
 */
public class menu extends javax.swing.JFrame {

    int qty_Margarita = 0;
    int qty_Pepperoni = 0;
    int qty_MeatLovers = 0;
    int qty_chicken = 0;
    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        MAR = new javax.swing.JTextField();
        PEP = new javax.swing.JTextField();
        MAR = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CHECKOUT = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        MAR1 = new javax.swing.JTextField();
        PEP1 = new javax.swing.JTextField();
        MEAT = new javax.swing.JTextField();
        CH = new javax.swing.JTextField();
        PROCEEDTOCHECKOUT = new javax.swing.JButton();
        Margarita = new javax.swing.JCheckBox();
        Pepperoni = new javax.swing.JCheckBox();
        MeatLovers = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        chicken = new javax.swing.JCheckBox();

        jTextField1.setText("jTextField1");

        MAR.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        MAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MARActionPerformed(evt);
            }
        });

        PEP.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N

        MAR.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        MAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MARActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 60)); // NOI18N
        jLabel8.setText("Pizza Hut");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\mero2\\OneDrive\\Documents\\NetBeansProjects\\pizza_order\\src\\imag\\Pizza_Hut_logo.png")); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        jLabel3.setText("30 LE");

        CHECKOUT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CHECKOUT.setText("PROCEED TO CHECKOUT");
        CHECKOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHECKOUTActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        jLabel5.setText("30 LE");

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        jLabel6.setText("30 LE");

        jLabel7.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        jLabel7.setText("30 LE");

        MAR1.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N
        MAR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAR1ActionPerformed(evt);
            }
        });

        PEP1.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N

        MEAT.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N

        CH.setFont(new java.awt.Font("STFangsong", 1, 14)); // NOI18N

        PROCEEDTOCHECKOUT.setText("Add");
        PROCEEDTOCHECKOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PROCEEDTOCHECKOUTActionPerformed(evt);
            }
        });

        Margarita.setFont(new java.awt.Font("NSimSun", 1, 14)); // NOI18N
        Margarita.setText("Margarita");
        Margarita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MargaritaActionPerformed(evt);
            }
        });

        Pepperoni.setFont(new java.awt.Font("NSimSun", 1, 14)); // NOI18N
        Pepperoni.setText("Pepperoni");
        Pepperoni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PepperoniActionPerformed(evt);
            }
        });

        MeatLovers.setFont(new java.awt.Font("NSimSun", 1, 14)); // NOI18N
        MeatLovers.setText("Meat Lovers");
        MeatLovers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeatLoversActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "Qty", "total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jTable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTableVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        chicken.setFont(new java.awt.Font("NSimSun", 1, 14)); // NOI18N
        chicken.setText("chicken");
        chicken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Pepperoni)
                                    .addComponent(MeatLovers)
                                    .addComponent(chicken)
                                    .addComponent(Margarita, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(MEAT, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PEP1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MAR1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CH, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(PROCEEDTOCHECKOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(CHECKOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MAR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(Margarita))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Pepperoni)
                            .addComponent(jLabel5)
                            .addComponent(PEP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MeatLovers)
                            .addComponent(jLabel6)
                            .addComponent(MEAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chicken)
                            .addComponent(jLabel7)
                            .addComponent(CH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(PROCEEDTOCHECKOUT))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(CHECKOUT)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MARActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MARActionPerformed

    private void CHECKOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHECKOUTActionPerformed
        // TODO add your handling code here:
        new personal(model).show();
        dispose();
    }//GEN-LAST:event_CHECKOUTActionPerformed
        static DefaultTableModel model;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) jTable.getModel();
        if(jTable.getSelectedRow() == jTable.getSelectedRow()){
            model.removeRow(jTable.getSelectedRow());
        }else{
            if(jTable.getRowCount() == 0){
                JOptionPane.showMessageDialog(rootPane, "Table is empty");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Please select single row for delete");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void MAR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAR1ActionPerformed

    private void PROCEEDTOCHECKOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PROCEEDTOCHECKOUTActionPerformed
        // TODO add your handling code here:

        model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);
        if (Margarita.isSelected()) {
            if (MAR.getText().isEmpty()) {
                qty_Margarita += 1;
            } else {
                qty_Margarita += Integer.parseInt(MAR.getText());
            }
        }
        if (Pepperoni.isSelected()) {
            if (PEP.getText().isEmpty()) {
                qty_Pepperoni += 1;
            } else {
                qty_Pepperoni += Integer.parseInt(PEP.getText());
            }
        }
        if (MeatLovers.isSelected()) {
            if (MEAT.getText().isEmpty()) {
                qty_MeatLovers += 1;
            } else {
                qty_MeatLovers += Integer.parseInt(MEAT.getText());
            }
        }
        if (chicken.isSelected()) {
            if (CH.getText().isEmpty()) {
                qty_chicken += 1;
            } else {
                qty_chicken += Integer.parseInt(CH.getText());
            }
        }

        int[] a = new int[]{qty_Margarita, qty_Pepperoni, qty_MeatLovers, qty_chicken};
        String[] as = new String[]{"Margarita", "Pepperoni", "MeatLovers", "chicken"};
        int size = a.length;
        for (int r = 0; r < size; r++) {
            for (int j = 0; j < size - r - 1; j++) {
                if (a[j] < a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                    String temps = as[j];
                    as[j] = as[j + 1];
                    as[j + 1] = temps;
                }
            }
        }
        for (int j = 0; j < a.length; j++) {
            if (a[j] != 0) {

                int tot = 30 * a[j];
                model = (DefaultTableModel) jTable.getModel();
                model.addRow(new Object[]{as[j], a[j], tot});
            }
        }
    }//GEN-LAST:event_PROCEEDTOCHECKOUTActionPerformed

    private void MargaritaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MargaritaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MargaritaActionPerformed

    private void PepperoniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PepperoniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PepperoniActionPerformed

    private void MeatLoversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeatLoversActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MeatLoversActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMouseClicked

    private void jTableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableVetoableChange

    private void chickenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chickenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField CH;
    public static javax.swing.JButton CHECKOUT;
    private javax.swing.JTextField MAR;
    public javax.swing.JTextField MAR1;
    public javax.swing.JTextField MEAT;
    private static javax.swing.JCheckBox Margarita;
    private javax.swing.JCheckBox MeatLovers;
    private javax.swing.JTextField PEP;
    public javax.swing.JTextField PEP1;
    public static javax.swing.JButton PROCEEDTOCHECKOUT;
    private static javax.swing.JCheckBox Pepperoni;
    private javax.swing.JCheckBox chicken;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
